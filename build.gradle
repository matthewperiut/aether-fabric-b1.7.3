plugins {
    id 'babric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    mixin {
        useLegacyMixinAp = true
    }
    accessWidenerPath = file("src/main/resources/aether.accessWidener")
    gluedMinecraftJar()
    customMinecraftManifest.set("https://babric.github.io/manifest-polyfill/${minecraft_version}.json")
    intermediaryUrl.set("https://maven.glass-launcher.net/babric/babric/intermediary/%1\$s/intermediary-%1\$s-v2.jar")
}

repositories {
    maven {
        name = 'Froge'
        url = 'https://maven.minecraftforge.net/'
    }
    maven {
        name = 'Babric'
        url = 'https://maven.glass-launcher.net/babric'
    }
    maven {
        name = 'Glass Snapshots'
        url = 'https://maven.glass-launcher.net/snapshots'
    }
    maven {
        name = 'Glass Releases'
        url = 'https://maven.glass-launcher.net/releases'
    }
    maven {
        name = 'Jitpack'
        url = 'https://jitpack.io/'
    }
    mavenCentral()
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name 'Legacy Fabric'
        url "https://repo.legacyfabric.net/repository/legacyfabric/"
        content {
            includeGroup 'net.legacyfabric'
            includeGroup 'net.legacyfabric.legacy-fabric-api'
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.legacyfabric:beta-yarn:b1.7.3+build.4"
    modImplementation "babric:fabric-loader:${project.loader_version}"

    implementation "org.slf4j:slf4j-api:1.8.0-beta4"
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.2'
    implementation("io.github.llamalad7:mixinextras-fabric:${mixinextras_version}")
    annotationProcessor("io.github.llamalad7:mixinextras-fabric:${mixinextras_version}")
    implementation "blue.endless:jankson:1.2.1"

    modImplementation "net.modificationstation:StationAPI:${project.stapi_version}"
    modImplementation("net.glasslauncher.mods:GlassConfigAPI:${project.gcapi_version}") { transitive false }
    modImplementation("com.github.calmilamsy:ModMenu:${project.modmenu_version}") { transitive false }
    modImplementation("com.github.matthewperiut:spc-babric:${spc_version}") { transitive false }
    modImplementation("com.github.matthewperiut:accessory-api:${project.accessory_version}") { transitive false }
    modImplementation("net.glasslauncher:HowManyItems-Fabric-Unofficial:${project.hmi_version}") {transitive false }
    modImplementation("maven.modrinth:bh-creative:${project.bhcreative_version}") { transitive false }

    // Runtime Dependencies
    modRuntimeOnly "com.github.GeyserMC:MCAuthLib:d9d773e5d50327c33898c65cd545a4f6ef3ba1b5" // needed for mojang fix
    modRuntimeOnly ("maven.modrinth:mojangfix-stationapi-edition:${mojang_fix_stapi_version}") { transitive false }
    modRuntimeOnly ("com.github.matthewperiut:gambac:${gambac_version}") { transitive false }
    modRuntimeOnly ("com.github.matthewperiut:thirdpersonfix-fabric-b1.7.3:82717b1f41") { transitive false }
    modRuntimeOnly ("com.github.matthewperiut:stapi-fast-intro:d2eeeb0e57") { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
